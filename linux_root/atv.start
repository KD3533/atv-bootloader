#!/bin/bash

# Connect stdin/stdout/stderr to the current console
exec < /dev/tty0
exec 1> /dev/tty0
exec 2> /dev/tty0

# Load isofs for boot cd/dvds
modprobe isofs

# Make a working directory
mount -v -t tmpfs tmpfs /root/atv-mnt

# Get a list of all partitions using fdisk
#partitions=$(fdisk -l | grep -o '^/dev/sd[a-z][0-9]*')
partitions=$(printf '%s\n' /dev/sd[a-z][0-9]* | grep -o '^/dev/sd[a-z][0-9]*')

echo "1"
echo "${partitions[*]}"

exists() {
    [ -e "$1" ]
}
echo "2"
echo "${partitions[*]}"

if exists /dev/sr* ; then
    for sr in /dev/sr* ; do
        partitions="$partitions"$'\n'"$sr"
    done
fi
echo "3"
echo "${partitions[*]}"

# Iterate through each partition and attempt to mount it
for partition in $partitions; do
    echo $partition
    # Create a mount point directory based on the partition name
    mount_point="/root/atv-mnt/$(basename $partition)"

    # Check if the mount point directory exists; if not, create it
    if [ ! -d "$mount_point" ]; then
        mkdir -p "$mount_point"
        echo "Created mp $mount_point"
    fi

    # Attempt to mount the partition as readonly
    mount -o ro "$partition" "$mount_point" || mount -o ro -t vfat "$partition" "$mount_point"

    # Check the mount status and print a message
    if [ $? -eq 0 ]; then
        echo "Mounted $partition at $mount_point"
    else
        echo "Failed to mount $partition"
    fi
done

# Determine the device name of the partition
device=$(df "$PWD" | awk 'NR==2 {print $1}' | sed -E 's/([0-9]+)$//;s|/dev/||')

# Set the partition number
part_number=1

echo "$device"

# Add the partition number at the end of the device name
target_disk="/dev/${device}${part_number}"

echo "$target_disk"

part1_mount_point="/mnt"

# Mount the boot partition where our shellscript is located
mount -t hfsplus -o ro "$target_disk" "$part1_mount_point"

# Path to the script
file_path="/mnt/bootloader.sh"

# Check if the script exists
if [ -e "$file_path" ]; then
    # FÃ¼hre das Skript auf Partition eins aus
    echo "Running script on partition one..."
    "$file_path"
else
    echo "No script on partition one found"
fi

